
https://cses.fi/problemset/task/1667/
#include <bits/stdc++.h>
#include <bits/stdc++.h>
using namespace std;
 
int main() {
    int n, m;
    cin >> n >> m;
    vector<int> adj[n + 1];
    for (int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
 
    vector<int> dis(n + 1, 1e9); 
    vector<int> parent(n + 1, -1); 
    queue<int> q;
    q.push(1);
    dis[1] = 0;
 
   
    while (!q.empty()) {
        int node = q.front();
        q.pop();
 
        for (int neighbor : adj[node]) {
            if (dis[node] + 1 < dis[neighbor]) {
                dis[neighbor] = dis[node] + 1;
                parent[neighbor] = node;
                q.push(neighbor);
            }
        }
    }
 
    if (dis[n] == 1e9) {
        cout << "IMPOSSIBLE" << endl;
    } else {
        cout << dis[n] + 1 << endl;
 
     
        vector<int> path;
       while(n!=-1){
           path.push_back(n);
           n=parent[n];
       }
        reverse(path.begin(), path.end()); 
 
    
        for (int node : path) {
            cout << node << " ";
        }
        cout << endl;
    }
 
    return 0;
